#!/bin/bash
### General options
#BSUB -q gpuv100
### -- set the job Name --
#BSUB -J IDLCV
### -- ask for number of cores (default: 1) --
#BSUB -n 4
### -- Select the resources: 1 gpu in exclusive process mode --
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 10:00
# request 5GB of system-memory
#BSUB -R "rusage[mem=4096]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o gpu_%J.out
#BSUB -e gpu_%J.err

# Load the cuda module
module load cuda/11.6
# module load pandas/2.1.3-python-3.11.7

nvidia-smi
/appl/cuda/11.6.0/samples/bin/x86_64/linux/release/deviceQuery
# define the driver name to use
# valid values: matmult_c.nvc++, matmult_f.nvc++
EXPORT CUDA_VISIBLE_DEVICES=0,1
EXPORT DEBUG=FALSE
python3 --version

echo $pwd
current_dir=$(pwd)
pip install -r $current_dir/requirements.txt

wget https://huggingface.co/datasets/yununuy/hotdot_nohotdog/resolve/main/hotdog_nothotdog.zip
unzip hotdog_nothotdog.zip -d ./assignment1

echo $1
echo $2
echo $3
echo $4
echo $5

python3 ./assignment1/__init__.py \
$(if [ -n "$1" ]; then echo "--model $1"; fi) \
$(if [ -n "$2" ]; then echo "--optimizer $2"; fi) \
$(if [ -n "$3" ]; then echo "--lr $3"; fi) \
$(if [ -n "$4" ]; then echo "--epochs $4"; fi) \
$(if [ -n "$5" ]; then echo "--batch_size $5"; fi)
